<!doctype html>
<html>
{{> head }}
<body id="index">
  {{> header }}
  <div class="content">
    <section id="subtitle">
      <h1 class="xl">Secure <span class="magic">serverless</span> code collaboration.</h1>
      {{! <p>A free and open-source way to host, share, and build software together.</p> }}
    </section>
    <section id="get-the-app">
      <div id="email-signup">
        <p>Interested? Join our mailing list for updates.</p>
        <form>
          <input type="text" placeholder="Enter your email"><button class="main-cta">Sign up</button>
        </form>
      </div>
    </section>
    <section id="horizontal-scroll-wrapper">
      <div class="horizontal-scroll-content"></div>
    </section>
    <section id="protocols">
      <div class="container">
        <div class="left"></div>
        <div class="right">
          <h1>Built on protocols, not platforms</h1>
          <h2>Radicle Link</h2>
          <p>A peer-to-peer replication protocol for hosting & collaboration, built on Git.</p>
          <h2>Radicle Registry</h2>
          <p>A blockchain for decentralized identity & project organization.</p>
          <p><a href="/">Learn more with our intro guide</a> →</p>
        </div>
      </div>
    </section>
    <section id="garden">
      <div class="container">
        <h1>Come on into the garden</h1>
        <p id="garden-subtitle">Radicle is completely open-source. You can build your <em>own</em> code collaboration experience.</p>
        <div class="two-column">
          <div class="two-column-item">
            {{> svg-build }}
            <h2>Start building with Radicle</h2>
            <p>Everything is open-source and <a href="/">public by default</a>. Dive into <a href="/">our code</a> or check out <a href="/">radicle.community</a>.</p>
          </div>
          <div class="two-column-item">
            {{> svg-developer }}
            <h2>Join the Developer Program</h2>
            <p>Interested in building Radicle into your code collaboration experience? Join our <a href="/">developer program</a>.</p>
          </div>
        </div>
      </div>
    </section>
     <section id="timeline">
      <div class="container">
        <h1>Where we’re headed</h1>
        <p id="timeline-subtitle">To build a great product, we have to use it ourselves. We're building Radicle with our own tech. Read about our public by default strategy <a href="/">here</a>.</p>
        <div class="timeline">
          <div class="timeline-item">
            <p class="here">We're here</p>
            <div class="icon">
              {{> svg-here }}
            </div>
            <p class="date">July 2020</p>
            <h2>Friends & Family</h2>
            <p>The core feature-set on top of a peer-to-peer stack. This is when we'll start using it ourselves.</p>
          </div>
          <div class="timeline-item not-active">
            <p class="not-here">not here</p>
            <div class="icon">
              {{> svg-date-square }}
            </div>
            <p class="date">Late 2020</p>
            <h2>Public Beta</h2>
            <p>Everything a code collaboration tool needs including notifications, search, and discovery.</p>
          </div>
          <div class="timeline-item not-active">
            <p class="not-here">not here</p>
            <div class="icon last">
              {{> svg-date-square }}
            </div>
            <p class="date">Early 2021</p>
            <h2>Functional Release</h2>
            <p>The app will be hooked up with real money and the public registry and we’ll launch our native coin.</p>
          </div>
        </div>
      </section>
  </div>{{! closes content }}
  {{> footer }}
 <script>
  const slider = document.querySelector('#horizontal-scroll-wrapper');
  let isDown = false;
  let startX;
  let scrollLeft;

  slider.addEventListener('mousedown', (e) => {
    isDown = true;
    slider.classList.add('active');
    startX = e.pageX - slider.offsetLeft;
    scrollLeft = slider.scrollLeft;
  });
  slider.addEventListener('mouseleave', () => {
    isDown = false;
    slider.classList.remove('active');
  });
  slider.addEventListener('mouseup', () => {
    isDown = false;
    slider.classList.remove('active');
  });
  slider.addEventListener('mousemove', (e) => {
    if(!isDown) return;
    e.preventDefault();
    const x = e.pageX - slider.offsetLeft;
    const walk = (x - startX) * 3; //scroll-fast
    slider.scrollLeft = scrollLeft - walk;
    console.log(walk);
  });
 </script>
</body>
</html>
